name: Build and Push Docker Images

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${ {github.actor} }
          password: ${ { secrets.GITHUB_TOKEN } }
      
      - name: Generate Docker Tags
        id: meta
        run: |
          # Generate tags
          SHORT_SHA=${GITHUB_SHA:0:7}
          BRANCH=${GITHUB_REF:12:${#GITHUB_REF}}
          DATE=$(date +%Y%m%d)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          echo "RELEASE_DATE=$rel-$DATE" >> $GITHUB_ENV
          echo "::set-output name=tags::latest,prod-eu-${SHORT_SHA},${BRANCH}-${SHORT_SHA},rel-${DATE}"
      
      - name: Build and Push MCP Server
        uses: docker/build-push-action@v4
        with:
          context: ./mcpd
          push: true
          tags: |
            ghcr.io/${ github.repository_owner }/itex-mcpd:latest
            ghcr.io/${ github.repository_owner }/itex-mcpd:prod-eu-${ env.SHORT_SHA }
            ghcr.io/${ github.repository_owner }/itex-mcpd:${ env.BRANCH }-${ env.SHORT_SHA }
            ghcr.io/${ github.repository_owner }/itex-mcpd:${ env.RELEASE_DATE }
          cache-from: type=registry,ref=ghcr.io/${ github.repository_owner }/itex-mcpd:latest
          cache-to: type=inline
      
      - name: Build and Push API
        uses: docker/build-push-action@v4
        with:
          context: ./api
          push: true
          tags: |
            ghcr.io/${ github.repository_owner }/itex-api:latest
            ghcr.io/${ github.repository_owner }/itex-api:prod-eu-${ env.SHORT_SHA }
            ghcr.io/${ github.repository_owner }/itex-api:${ env.BRANCH }-${ env.SHORT_SHA }
            ghcr.io/${ github.repository_owner }/itex-api:${ env.RELEASE_DATE }
          cache-from: type=registry,ref=ghcr.io/${ github.repository_owner }/itex-api:latest
          cache-to: type=inline
      
      - name: Build and Push WebApp
        uses: docker/build-push-action@v4
        with:
          context: ./webapp
          push: true
          tags: |
            ghcr.io/${ github.repository_owner }/itex-webapp:latest
            ghcr.io/${ github.repository_owner }/itex-webapp:prod-eu-${ env.SHORT_SHA }
            ghcr.io/${ github.repository_owner }/itex-webapp:${ env.BRANCH }-${ env.SHORT_SHA }
            ghcr.io/${ github.repository_owner }/itex-webapp:${ env.RELEASE_DATE y=
          cache-from: type=registry,ref=ghcr.io/${ github.repository_owner }/itex-webapp:latest
          cache-to: type=inline
      
      - name: Trigger Deployment Webhook
        if: success()
        run: |
          curl -X POST https://mcp.itex.technoland.pro/api/v1/webhook/deploy \
            -H 'Content-Type: application/json' \
            -H 'X-Webhook-Signature: ${ secrets.WEBHOOK_SIGNATURE }' \
            -d '{"ref":"${ github.ref }","sha":"${ github.sha }","repository":"${ github.repository }"}'
